{"version":3,"sources":["components/MovieCard/MovieCard.tsx","contexts/MoviesContext.ts","customHooks/useMoviesContext.ts","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/films.ts","App.tsx","index.tsx"],"names":["MovieCard","memo","movie","className","src","Poster","alt","Title","Plot","MoviesContext","React","createContext","movies","setMovies","useMoviesContext","useContext","MoviesList","map","imdbID","FindMovie","useState","hasError","setHasError","searchValue","setSearchValue","searchedMovie","setSearchedMovie","hasMovie","some","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","cn","value","onChange","target","onClick","title","fetch","then","response","json","data","disabled","App","Provider","ReactDOM","render","document","getElementById"],"mappings":"gUAOaA,EAA6BC,gBAAK,gBAAGC,EAAH,EAAGA,MAAH,OAC7C,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,mCC3BKC,EAAgBC,IAAMC,cAAiC,CAClEC,OAAQ,GACRC,UAAW,eCNAC,EAAmB,kBAAMC,qBAAWN,ICEpCO,EAAuBf,gBAAK,WACvC,IAAQW,EAAWE,IAAXF,OAER,OACE,qBAAKT,UAAU,SAAf,SACGS,EAAOK,KAAI,SAAAf,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMgB,gB,6BCJd,IAAMC,EAAsBlB,gBAAK,WACtC,MAA8Ba,IAAtBF,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAEhB,EAAgCO,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA0CJ,mBAAuB,MAAjE,mBAAOK,EAAP,KAAsBC,EAAtB,KAOMC,EAAW,SAACzB,GAAD,OACfU,EAAOgB,MAAK,qBAAGV,SAAwBhB,EAAMgB,WAqC/C,OACE,qCACE,uBAAMf,UAAU,aAAa0B,SA/BZ,SAACC,GACpBA,EAAMC,iBAEFN,IAAkBE,EAASF,IAC7BZ,EAAU,GAAD,mBAAKD,GAAL,CAAaa,KARxBD,EAAe,IACfE,EAAiB,OAkCf,UACE,sBAAKvB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6B,QAAQ,cAAjC,yBAIA,qBAAK7B,UAAU,UAAf,SACE,uBACE8B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZhC,UAAWiC,IAAG,QAAS,CAAE,YAAaf,IACtCgB,MAAOd,EACPe,SA1DS,SAACR,GACpBR,GAAY,GACZE,EAAeM,EAAMS,OAAOF,YA4DrBhB,GACC,mBAAGlB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,kBACVqC,QAlDK,WCrCZ,IAAiBC,KDsCZlB,ECrCHmB,MAAM,GAAD,OAHG,+CAGH,OAAeD,IACxBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDqCxBF,MAAK,SAAAG,GACAA,EAAKvC,MACPmB,EAAiBoB,GAEjBxB,GAAY,OAyCV,4BASF,qBAAKnB,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,oBACV4C,WAhDNtB,IAAkBE,EAASF,IA6CvB,qCAWN,sBAAKtB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCsB,GACC,cAAC,EAAD,CAAWvB,MAAOuB,aExGfuB,EAAgB,WAC3B,MAA4B5B,mBAAkB,IAA9C,mBAAOR,EAAP,KAAeC,EAAf,KAEA,OACE,cAACJ,EAAcwC,SAAf,CAAwBZ,MAAO,CAAEzB,SAAQC,aAAzC,SACE,sBAAKV,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,YCZV+C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.12937a4a.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = memo(({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.Plot}\n        <br />\n      </div>\n    </div>\n  </div>\n));\n","import React from 'react';\n\ntype MoviesContextType = {\n  movies: Movie[],\n  setMovies: (movies: Movie[]) => void,\n};\n\nexport const MoviesContext = React.createContext<MoviesContextType>({\n  movies: [],\n  setMovies: () => {},\n});\n","import { useContext } from 'react';\nimport { MoviesContext } from '../contexts/MoviesContext';\n\nexport const useMoviesContext = () => useContext(MoviesContext);\n","import React, { memo } from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { useMoviesContext } from '../../customHooks/useMoviesContext';\n\nexport const MoviesList: React.FC = memo(() => {\n  const { movies } = useMoviesContext();\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n});\n","import React, { memo, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { request } from '../../api/films';\n\nimport { MovieCard } from '../MovieCard';\nimport { useMoviesContext } from '../../customHooks/useMoviesContext';\n\nexport const FindMovie: React.FC = memo(() => {\n  const { movies, setMovies } = useMoviesContext();\n\n  const [hasError, setHasError] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [searchedMovie, setSearchedMovie] = useState<Movie | null>(null);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasError(false);\n    setSearchValue(event.target.value);\n  };\n\n  const hasMovie = (movie: Movie) => (\n    movies.some(({ imdbID }) => imdbID === movie.imdbID)\n  );\n\n  const resetForm = () => {\n    setSearchValue('');\n    setSearchedMovie(null);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (searchedMovie && !hasMovie(searchedMovie)) {\n      setMovies([...movies, searchedMovie]);\n    }\n\n    resetForm();\n  };\n\n  const getMovie = () => {\n    request(searchValue)\n      .then(data => {\n        if (data.Title) {\n          setSearchedMovie(data);\n        } else {\n          setHasError(true);\n        }\n      });\n  };\n\n  const isDisabled = () => {\n    if (searchedMovie && !hasMovie(searchedMovie)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': hasError })}\n              value={searchValue}\n              onChange={handleChange}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={isDisabled()}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {searchedMovie && (\n          <MovieCard movie={searchedMovie} />\n        )}\n      </div>\n    </>\n  );\n});\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=3505f6f5&t=';\n\nexport function request(title: string) {\n  return fetch(`${BASE_URL}${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { MoviesContext } from './contexts/MoviesContext';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <MoviesContext.Provider value={{ movies, setMovies }}>\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie />\n        </div>\n      </div>\n    </MoviesContext.Provider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}